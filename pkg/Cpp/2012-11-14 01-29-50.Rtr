##------ 14/11/2012 01:29:50 ------##

R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R es un software libre y viene sin GARANTIA ALGUNA.
Usted puede redistribuirlo bajo ciertas circunstancias.
Escriba 'license()' o 'licence()' para detalles de distribucion.

R es un proyecto colaborativo con muchos contribuyentes.
Escriba 'contributors()' para obtener m'as informaci'on y
'citation()' para saber c'omo citar R o paquetes de R en publicaciones.

Escriba 'demo()' para demostraciones, 'help()' para el sistema on-line de ayuda,
o 'help.start()' para abrir el sistema de ayuda HTML con su navegador.
Escriba 'q()' para salir de R.

> dir()
[1] "2012-11-14 01-29-50.Rtr" "AmoreCpp"               
[3] "diaClassDiagrams"        "pkg"                    
> 
> suppressMessages(require("inline"))
> suppressMessages(require("Rcpp"))
> suppressMessages(require("RUnit"))
> 
> 
> 
> uniTestPath   <-  "./pkg/AMORE/unitTest"
> testFile <- "./www/unitTestResults.html"
> 
> testFileToSFLinkMap <- function(testFileName, testDir = "unitTest") {
+ 	bname <- basename(testFileName)
+ 	regExp <- paste("^.*/([.a-zA-Z0-9]*)/", testDir,"/.*$", sep = "")
+ 	pack <- sub(regExp, "\1", testFileName)
+ 	return(paste("https://r-forge.r-project.org/scm/viewvc.php/pkg/AMORE/", pack, "/", testDir, "/", bname,"?root=amore", sep = ""))
+ }
> 
> 
> 
> testsuite.AMORECppClasses <- defineTestSuite("AMORE C++ Classes Unit Tests",
+ 		dirs = uniTestPath ,	
+ 		testFileRegexp = "^runit.Cpp.+\\.R",
+ 		testFuncRegexp = "^test.+",
+ 		rngKind = "Marsaglia-Multicarry",
+ 		rngNormalKind = "Kinderman-Ramage"
+ )
> 
> 
> 
> testResult <- runTestSuite(list( 
+  				testsuite.AMORECppClasses					
+ 								))


Executing test function test.ActivationFunction.Cpp.Constructor  ... Timing stopped at: 12.746 3.522 52.836 
Error in func() : no se pudo encontrar la funci'on "benchmark"
Adem'as: Mensajes de aviso perdidos
1: In isValidTestSuite(testSuites) :
  'testSuite' object is not of class 'RUnitTestSuite'.
2: In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'rbenchmark'
 done successfully.



Executing test function test.Con.Cpp.Constructor  ... file13894531b40c6.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894531b40c6.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894531b40c6.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894531b40c6.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894531b40c6.cpp: In function 'SEXPREC* file13894531b40c6()':
file13894531b40c6.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894531b40c6.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894531b40c6 (  );
366: }
367: 
368: SEXP file13894531b40c6 (  ) {
369:  
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(1) );
372: 			
373: 			Con con( *neuronPtr , 4.5 );
374: 			con.show();
375: 			con.validate();	
376: 			return	Rcpp::List::create(	Rcpp::Named("Id") 	= con.Id(),
377: 										Rcpp::Named("weight") = con.getWeight()
378: 									);
379: 			
380:   Rf_warning("your C program does not return anything!");
381:   return R_NilValue;
382: }
Timing stopped at: 2.476 0.571 8.139 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894531b40c6.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894531b40c6.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894531b40c6.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894531b40c6.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894531b40c6.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894531b40c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894531b40c6.cpp 2> file13894531b40c6.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Con.Cpp.Id  ... file138942239b1ca.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942239b1ca.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138942239b1ca.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942239b1ca.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138942239b1ca.cpp: In function 'SEXPREC* file138942239b1ca()':
file138942239b1ca.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138942239b1ca.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138942239b1ca.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138942239b1ca (  );
366: }
367: 
368: SEXP file138942239b1ca (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(9) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr, 8.7) ); 
373: 	
374: 			return wrap(conPtr->Id());
375: 			
376:   Rf_warning("your C program does not return anything!");
377:   return R_NilValue;
378: }
Timing stopped at: 2.441 0.508 5.662 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138942239b1ca.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942239b1ca.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138942239b1ca.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942239b1ca.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942239b1ca.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942239b1ca.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138942239b1ca.cpp 2> file138942239b1ca.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Con.Cpp.getNeuron  ... file1389479c75653.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389479c75653.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389479c75653.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389479c75653.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389479c75653.cpp: In function 'SEXPREC* file1389479c75653()':
file1389479c75653.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389479c75653.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389479c75653.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389479c75653 (  );
366: }
367: 
368: SEXP file1389479c75653 (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(12) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr, 9.8) ); 
373: 	
374: 			return wrap(conPtr->getNeuron().getId());
375: 			
376:   Rf_warning("your C program does not return anything!");
377:   return R_NilValue;
378: }
Timing stopped at: 2.391 0.498 4.535 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389479c75653.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389479c75653.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389479c75653.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389479c75653.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389479c75653.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389479c75653.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389479c75653.cpp 2> file1389479c75653.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Con.Cpp.getWeight  ... file13894df4a19b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894df4a19b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894df4a19b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894df4a19b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894df4a19b.cpp: In function 'SEXPREC* file13894df4a19b()':
file13894df4a19b.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894df4a19b.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894df4a19b.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894df4a19b (  );
366: }
367: 
368: SEXP file13894df4a19b (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(16) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr, 12.4) ); 
373: 	
374: 			return wrap(conPtr->getWeight());
375: 			
376:   Rf_warning("your C program does not return anything!");
377:   return R_NilValue;
378: }
Timing stopped at: 2.383 0.454 3.3 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894df4a19b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894df4a19b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894df4a19b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894df4a19b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894df4a19b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894df4a19b.cpp:321:Adem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894df4a19b.cpp 2> file13894df4a19b.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Con.Cpp.setNeuron  ... file13894379dce45.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894379dce45.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894379dce45.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894379dce45.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894379dce45.cpp: In function 'SEXPREC* file13894379dce45()':
file13894379dce45.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894379dce45.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894379dce45.cpp:377: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894379dce45.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894379dce45 (  );
366: }
367: 
368: SEXP file13894379dce45 (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
371: 			NeuronPtr neuronPtr1( neuralFactoryPtr->makeNeuron(12) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr1, 9.7) ); 
373: 	
374: 			std::vector<double> result;
375: 			result.push_back(conPtr->Id());
376: 			conPtr->show();
377: 			NeuronPtr neuronPtr2( neuralFactoryPtr->makeNeuron(21) );
378: 
379: 			conPtr->setNeuron(*neuronPtr2);
380: 			conPtr->show();
381: 			result.push_back(conPtr->Id());  
382: 			return wrap(result);
383: 			
384:   Rf_warning("your C program does not return anything!");
385:   return R_NilValue;
386: }
Timing stopped at: 2.407 0.495 4.294 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894379dce45.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894379dce45.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894379dce45.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894379dce45.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894379dce45.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894379dce45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894379dce45.cpp 2> file13894379dce45.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Con.Cpp.setWeight  ... file1389459513089.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389459513089.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389459513089.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389459513089.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389459513089.cpp: In function 'SEXPREC* file1389459513089()':
file1389459513089.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389459513089.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389459513089.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389459513089 (  );
366: }
367: 
368: SEXP file1389459513089 (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory);
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(16) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr, 12.4) ); 
373: 			std::vector<double> result;
374: 			result.push_back(conPtr->getWeight());
375: 			conPtr->setWeight(2.2);
376: 			result.push_back(conPtr->getWeight());
377: 			return wrap(result);
378: 			
379:   Rf_warning("your C program does not return anything!");
380:   return R_NilValue;
381: }
Timing stopped at: 2.386 0.447 3.592 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389459513089.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389459513089.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389459513089.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389459513089.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389459513089.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389459513089.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389459513089.cpp 2> file1389459513089.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Con.Cpp.show  ... file138946149a02e.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946149a02e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138946149a02e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946149a02e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138946149a02e.cpp: In function 'SEXPREC* file138946149a02e()':
file138946149a02e.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138946149a02e.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138946149a02e.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138946149a02e (  );
366: }
367: 
368: SEXP file138946149a02e (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(16) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr, 12.4) ); 
373: 	
374: 			conPtr->show();
375: 			return wrap(true);
376: 			
377:   Rf_warning("your C program does not return anything!");
378:   return R_NilValue;
379: }
Timing stopped at: 2.428 0.458 3.619 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138946149a02e.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946149a02e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138946149a02e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946149a02e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946149a02e.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946149a02e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138946149a02e.cpp 2> file138946149a02e.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Con.Cpp.validate_from  ... file1389428b35de8.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389428b35de8.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389428b35de8.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389428b35de8.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389428b35de8.cpp: In function 'SEXPREC* file1389428b35de8()':
file1389428b35de8.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389428b35de8.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389428b35de8.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389428b35de8 (  );
366: }
367: 
368: SEXP file1389428b35de8 (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(NA_INTEGER) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr, 2.7) ); 
373: 		
374: 			conPtr->validate();
375: 			return wrap(true);
376: 			
377:   Rf_warning("your C program does not return anything!");
378:   return R_NilValue;
379: }
Timing stopped at: 2.417 0.467 3.668 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389428b35de8.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389428b35de8.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389428b35de8.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389428b35de8.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389428b35de8.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389428b35de8.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389428b35de8.cpp 2> file1389428b35de8.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Con.Cpp.validate_weight  ... file1389417da3f38.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389417da3f38.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389417da3f38.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389417da3f38.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389417da3f38.cpp: In function 'SEXPREC* file1389417da3f38()':
file1389417da3f38.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389417da3f38.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389417da3f38.cpp:372: warning: division by zero in '1.24000000000000003552713678800500929355621337890625e+1 / 0.'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389417da3f38.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389417da3f38 (  );
366: }
367: 
368: SEXP file1389417da3f38 (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(16) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr, 12.4/0.0) ); 
373: 		
374: 			conPtr->validate();
375: 			return wrap(true);
376: 			
377:   Rf_warning("your C program does not return anything!");
378:   return R_NilValue;
379: }
Timing stopped at: 2.407 0.458 3.414 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389417da3f38.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389417da3f38.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389417da3f38.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389417da3f38.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389417da3f38.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389417da3f38.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389417da3f38.cpp 2> file1389417da3f38.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Container.Cpp.Constructor_EmptyArgumentList  ... file13894796c81c3.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894796c81c3.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894796c81c3.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894796c81c3.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894796c81c3.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894796c81c3 (  );
366: }
367: 
368: SEXP file13894796c81c3 (  ) {
369: 
370: 			// Test
371: 			ConContainerPtr conContainerPtr( new SimpleContainer<ConPtr> () );
372: 			conContainerPtr->validate();		
373: 			return wrap(conContainerPtr->size());			
374:   Rf_warning("your C program does not return anything!");
375:   return R_NilValue;
376: }
Timing stopped at: 2.428 0.457 3.596 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894796c81c3.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894796c81c3.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894796c81c3.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894796c81c3.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894796c81c3.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894796c81c3.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894796c81c3.cpp 2> file13894796c81c3.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Container.Cpp.push_back  ... file1389442bb677c.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389442bb677c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389442bb677c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389442bb677c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389442bb677c.cpp: In function 'SEXPREC* file1389442bb677c(SEXPREC*, SEXPREC*)':
file1389442bb677c.cpp:373: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389442bb677c.cpp:374: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389442bb677c.cpp:383: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389442bb677c.cpp:391: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389442bb677c.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389442bb677c ( SEXP Ids, SEXP Weights );
366: }
367: 
368: SEXP file1389442bb677c ( SEXP Ids, SEXP Weights ) {
369: 
370: 			// Data set up
371: 				
372: 				NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
373: 				LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
374: 				ConContainerPtr conContainerPtr ( neuralFactoryPtr->makeConContainer() );
375: 				ConPtr	conPtr;
376: 				NeuronPtr neuronPtr;
377: 				Rcpp::IntegerVector ids(Ids);
378: 				Rcpp::NumericVector weights(Weights);
379: 			// Test
380: 
381: 				 
382: 				for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
383: 					neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
384: 					layerPtr->push_back(neuronPtr);
385: 				}
386: 
387: 				Rcpp::NumericVector::iterator wItr = weights.begin();
388: 
389: 				NeuronIteratorPtr itr( layerPtr->createIterator() ) ;
390: 				for ( itr->first(); !itr->isDone(); itr->next() ) {
391: 					conPtr = neuralFactoryPtr->makeCon( *itr->currentItem() , *(wItr++) ) ;
392: 					conContainerPtr->push_back( conPtr );
393: 				}
394: 				std::vector<Handler> result;
395: 				
396: 				ConIteratorPtr conItr( conContainerPtr->createIterator() );
397: 				for ( conItr->first(); !conItr->isDone(); conItr->next() ) {
398: 					result.push_back( conItr->currentItem()->Id() );
399: 				}
400: 				return wrap(	result	);	
401: 				
402:   Rf_warning("your C program does not return anything!");
403:   return R_NilValue;
404: }
Timing stopped at: 2.434 0.461 3.877 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389442bb677c.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389442bb677c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389442bb677c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389442bb677c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442bb677c.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442bb677c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389442bb677c.cpp 2> file1389442bb677c.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Container.Cpp.show  ... file138941d87201e.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941d87201e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138941d87201e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941d87201e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138941d87201e.cpp: In function 'SEXPREC* file138941d87201e(SEXPREC*, SEXPREC*)':
file138941d87201e.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138941d87201e.cpp:382: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138941d87201e.cpp:387: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138941d87201e.cpp:392: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138941d87201e.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138941d87201e ( SEXP Ids, SEXP Weights );
366: }
367: 
368: SEXP file138941d87201e ( SEXP Ids, SEXP Weights ) {
369: 
370: 		// Data set up
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 
374: 
375: 			Rcpp::IntegerVector ids(Ids);
376: 			Rcpp::NumericVector weights(Weights);
377: 			NeuronPtr neuronPtr;
378: 
379: 		// Test
380: 				 
381: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
382: 				neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
383: 				layerPtr->push_back(neuronPtr);
384: 			}
385: 
386: 			Rcpp::NumericVector::iterator wItr = weights.begin();
387: 			ConContainerPtr conContainerPtr( neuralFactoryPtr->makeConContainer() );
388: 			ConPtr conPtr;
389: 
390: 			NeuronIteratorPtr itr( layerPtr->createIterator() ) ;
391: 			for ( itr->first(); !itr->isDone(); itr->next() ) {
392: 				conPtr = neuralFactoryPtr->makeCon( *itr->currentItem() , *(wItr++) ) ;
393: 				conContainerPtr->push_back( conPtr );
394: 			}
395: 
396: 
397: 		// Test	
398: 			conContainerPtr->show();
399: 
400: 			std::vector<Handler> result;
401: 			ConIteratorPtr conItr( conContainerPtr->createIterator() );
402: 			for ( conItr->first(); !conItr->isDone(); conItr->next() ) {
403: 				result.push_back( conItr->currentItem()->Id() );
404: 			}
405: 			return wrap(	result	);		
406: 			
407:   Rf_warning("your C program does not return anything!");
408:   return R_NilValue;
409: }
Timing stopped at: 2.375 0.436 3.197 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138941d87201e.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941d87201e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138941d87201e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941d87201e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941d87201e.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941d87201e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138941d87201e.cpp 2> file138941d87201e.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Container.Cpp.size  ... file13894124da0b7.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894124da0b7.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894124da0b7.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894124da0b7.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894124da0b7.cpp: In function 'SEXPREC* file13894124da0b7(SEXPREC*, SEXPREC*)':
file13894124da0b7.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894124da0b7.cpp:381: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894124da0b7.cpp:386: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894124da0b7.cpp:393: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894124da0b7.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894124da0b7 ( SEXP Ids, SEXP Weights );
366: }
367: 
368: SEXP file13894124da0b7 ( SEXP Ids, SEXP Weights ) {
369: 
370: 		// Data set up
371: 				NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
372: 				LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 				NeuronPtr neuronPtr;
374: 
375: 				Rcpp::IntegerVector ids(Ids);
376: 				Rcpp::NumericVector weights(Weights);
377: 			// Test
378: 
379: 				 
380: 				for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
381: 					neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
382: 					layerPtr->push_back(neuronPtr);
383: 				}
384: 
385: 					
386: 				ConContainerPtr conContainerPtr ( neuralFactoryPtr->makeConContainer() );
387: 				ConPtr	conPtr;
388: 				Rcpp::NumericVector::iterator wItr = weights.begin();
389: 				std::vector<size_type> result;				
390: 
391: 				NeuronIteratorPtr itr( layerPtr->createIterator() ) ;
392: 				for ( itr->first(); !itr->isDone(); itr->next() ) {
393: 					conPtr = neuralFactoryPtr->makeCon( *itr->currentItem() , *(wItr++) ) ;
394: 					conContainerPtr->push_back( conPtr );
395: 					result.push_back(conContainerPtr->size());
396: 				}
397: 				return wrap(result);
398: 			
399:   Rf_warning("your C program does not return anything!");
400:   return R_NilValue;
401: }
Timing stopped at: 2.446 0.461 3.692 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894124da0b7.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894124da0b7.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894124da0b7.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894124da0b7.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894124da0b7.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894124da0b7.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894124da0b7.cpp 2> file13894124da0b7.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerIterator.Cpp.Constructor  ... file13894267257c4.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894267257c4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894267257c4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894267257c4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894267257c4.cpp: In function 'SEXPREC* file13894267257c4(SEXPREC*)':
file13894267257c4.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894267257c4.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894267257c4.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894267257c4 ( SEXP Ids );
366: }
367: 
368: SEXP file13894267257c4 ( SEXP Ids ) {
369: 
370: 			// Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 			NeuronPtr neuronPtr;
374: 			Rcpp::IntegerVector ids(Ids);
375: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
376: 				neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
377: 				layerPtr->push_back(neuronPtr);
378: 			}
379: 			NeuronIteratorPtr itr = layerPtr->createIterator();
380: 			std::vector<int> result;
381: 			for ( itr->first(); !itr->isDone(); itr->next() ) {
382: 				result.push_back(itr->currentItem()->getId());
383: 			}
384: 			return wrap(	result	);
385: 		
386:   Rf_warning("your C program does not return anything!");
387:   return R_NilValue;
388: }
Timing stopped at: 2.39 0.431 3.24 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894267257c4.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894267257c4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894267257c4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894267257c4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894267257c4.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894267257c4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894267257c4.cpp 2> file13894267257c4.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerIterator.Cpp.currentItem  ... file138941ce01894.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941ce01894.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138941ce01894.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941ce01894.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138941ce01894.cpp: In function 'SEXPREC* file138941ce01894(SEXPREC*)':
file138941ce01894.cpp:373: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138941ce01894.cpp:377: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138941ce01894.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138941ce01894 ( SEXP Ids );
366: }
367: 
368: SEXP file138941ce01894 ( SEXP Ids ) {
369: 
370: BEGIN_RCPP
371: 			// Test
372: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
373: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
374: 			NeuronPtr neuronPtr;
375: 			Rcpp::IntegerVector ids(Ids);
376: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
377: 				neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
378: 				layerPtr->push_back(neuronPtr);
379: 			}
380: 			NeuronIteratorPtr itr = layerPtr->createIterator();
381: 			itr->first();
382: 			std::vector<Handler> result;
383: 			result.push_back( itr->currentItem()->getId() ); // Id==10
384: 			itr->next();
385: 			result.push_back( itr->currentItem()->getId() ); // Id==20
386: 			itr->next();
387: 			result.push_back( itr->currentItem()->getId() ); // Id==30
388: 			itr->next();
389: 			result.push_back( itr->currentItem()->getId() ); // Error: IteratorOutOfBounds
390: 			return wrap(result);
391: END_RCPP
392: 
393: 			
394:   Rf_warning("your C program does not return anything!");
395:   return R_NilValue;
396: }
Timing stopped at: 2.438 0.458 3.699 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138941ce01894.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941ce01894.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138941ce01894.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941ce01894.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ce01894.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ce01894.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138941ce01894.cpp 2> file138941ce01894.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerIterator.Cpp.first  ... file138943c6dab5b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943c6dab5b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943c6dab5b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943c6dab5b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943c6dab5b.cpp: In function 'SEXPREC* file138943c6dab5b(SEXPREC*)':
file138943c6dab5b.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943c6dab5b.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138943c6dab5b.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138943c6dab5b ( SEXP Ids );
366: }
367: 
368: SEXP file138943c6dab5b ( SEXP Ids ) {
369: 
370: 			// Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 			NeuronPtr neuronPtr;
374: 			Rcpp::IntegerVector ids(Ids);
375: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
376: 				neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
377: 				layerPtr->push_back(neuronPtr);
378: 			}
379: 			NeuronIteratorPtr itr = layerPtr->createIterator();
380: 			itr->next();
381: 			itr->next();
382: 			itr->first();
383: 			int result = itr->currentItem()->getId();
384: 			return wrap(result);
385: 		
386:   Rf_warning("your C program does not return anything!");
387:   return R_NilValue;
388: }
Timing stopped at: 2.422 0.451 3.774 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138943c6dab5b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943c6dab5b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943c6dab5b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943c6dab5b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943c6dab5b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943c6dab5b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138943c6dab5b.cpp 2> file138943c6dab5b.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerIterator.Cpp.isDone  ... file13894440d025b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894440d025b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894440d025b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894440d025b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894440d025b.cpp: In function 'SEXPREC* file13894440d025b(SEXPREC*)':
file13894440d025b.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
file13894440d025b.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894440d025b.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894440d025b ( SEXP Ids );
366: }
367: 
368: SEXP file13894440d025b ( SEXP Ids ) {
369: 
370: 			// Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 			NeuronPtr neuronPtr;
374: 			Rcpp::IntegerVector ids(Ids);
375: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
376: 				neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
377: 				layerPtr->push_back(neuronPtr);
378: 			}
379: 			NeuronIteratorPtr itr = layerPtr->createIterator();
380: 			itr->first();
381: 			std::vector<bool> result;
382: 			result.push_back( itr->isDone() );
383: 			itr->next();
384: 			result.push_back( itr->isDone() );
385: 			itr->next();
386: 			result.push_back( itr->isDone() );
387: 			itr->next();
388: 			result.push_back( itr->isDone() );
389: 			return wrap(result);
390: 		
391:   Rf_warning("your C program does not return anything!");
392:   return R_NilValue;
393: }
Timing stopped at: 2.451 0.455 3.533 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894440d025b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894440d025b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894440d025b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894440d025b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894440d025b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894440d025b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894440d025b.cpp 2> file13894440d025b.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerIterator.Cpp.next  ... file138943215c744.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943215c744.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943215c744.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943215c744.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943215c744.cpp: In function 'SEXPREC* file138943215c744(SEXPREC*)':
file138943215c744.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943215c744.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138943215c744.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138943215c744 ( SEXP Ids );
366: }
367: 
368: SEXP file138943215c744 ( SEXP Ids ) {
369: 
370: 			// Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 			NeuronPtr neuronPtr;
374: 			Rcpp::IntegerVector ids(Ids);
375: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
376: 				neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
377: 				layerPtr->push_back(neuronPtr);
378: 			}
379: 			NeuronIteratorPtr itr = layerPtr->createIterator();
380: 			itr->first();
381: 			std::vector<Handler> result;
382: 			result.push_back( itr->currentItem()->getId() );
383: 			itr->next();
384: 			result.push_back( itr->currentItem()->getId() );
385: 			itr->next();
386: 			result.push_back( itr->currentItem()->getId() );
387: 			return wrap(result);
388: 		
389:   Rf_warning("your C program does not return anything!");
390:   return R_NilValue;
391: }
Timing stopped at: 2.457 0.463 3.803 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138943215c744.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943215c744.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943215c744.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943215c744.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943215c744.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943215c744.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138943215c744.cpp 2> file138943215c744.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerReverseIterator.Cpp.Constructor  ... file1389433cd5b0c.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389433cd5b0c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389433cd5b0c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389433cd5b0c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389433cd5b0c.cpp: In function 'SEXPREC* file1389433cd5b0c(SEXPREC*)':
file1389433cd5b0c.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389433cd5b0c.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389433cd5b0c.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389433cd5b0c ( SEXP Ids );
366: }
367: 
368: SEXP file1389433cd5b0c ( SEXP Ids ) {
369: 
370: 			// Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 			NeuronPtr neuronPtr;
374: 			Rcpp::IntegerVector ids(Ids);
375: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
376: 			neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
377: 			layerPtr->push_back(neuronPtr);
378: 			}
379: 			NeuronIteratorPtr itr = layerPtr->createReverseIterator();
380: 			std::vector<int> result;
381: 			for ( itr->first(); !itr->isDone(); itr->next() ) {
382: 			result.push_back(itr->currentItem()->getId());
383: 			}
384: 			return wrap(	result	);
385: 			
386:   Rf_warning("your C program does not return anything!");
387:   return R_NilValue;
388: }
Timing stopped at: 2.47 0.458 3.595 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389433cd5b0c.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389433cd5b0c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389433cd5b0c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389433cd5b0c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389433cd5b0c.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389433cd5b0c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389433cd5b0c.cpp 2> file1389433cd5b0c.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerReverseIterator.Cpp.currentItem  ... file138946f148b65.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946f148b65.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138946f148b65.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946f148b65.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138946f148b65.cpp: In function 'SEXPREC* file138946f148b65(SEXPREC*)':
file138946f148b65.cpp:373: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138946f148b65.cpp:377: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138946f148b65.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138946f148b65 ( SEXP Ids );
366: }
367: 
368: SEXP file138946f148b65 ( SEXP Ids ) {
369: 
370: 			BEGIN_RCPP
371: 			// Test
372: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
373: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
374: 			NeuronPtr neuronPtr;
375: 			Rcpp::IntegerVector ids(Ids);
376: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
377: 			neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
378: 			layerPtr->push_back(neuronPtr);
379: 			}
380: 			NeuronIteratorPtr itr = layerPtr->createReverseIterator();
381: 			itr->first();
382: 			std::vector<Handler> result;
383: 			result.push_back( itr->currentItem()->getId() ); // Id==10
384: 			itr->next();
385: 			result.push_back( itr->currentItem()->getId() ); // Id==20
386: 			itr->next();
387: 			result.push_back( itr->currentItem()->getId() ); // Id==30
388: 			itr->next();
389: 			result.push_back( itr->currentItem()->getId() ); // Error: IteratorOutOfBounds
390: 			return wrap(result);
391: 			END_RCPP			
392: 			
393:   Rf_warning("your C program does not return anything!");
394:   return R_NilValue;
395: }
Timing stopped at: 2.437 0.451 3.846 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138946f148b65.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946f148b65.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138946f148b65.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946f148b65.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946f148b65.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946f148b65.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138946f148b65.cpp 2> file138946f148b65.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerReverseIterator.Cpp.first  ... file138942dcbccdc.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942dcbccdc.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138942dcbccdc.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942dcbccdc.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138942dcbccdc.cpp: In function 'SEXPREC* file138942dcbccdc(SEXPREC*)':
file138942dcbccdc.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138942dcbccdc.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138942dcbccdc.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138942dcbccdc ( SEXP Ids );
366: }
367: 
368: SEXP file138942dcbccdc ( SEXP Ids ) {
369: 
370: 			// Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 			NeuronPtr neuronPtr;
374: 			Rcpp::IntegerVector ids(Ids);
375: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
376: 			neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
377: 			layerPtr->push_back(neuronPtr);
378: 			}
379: 			NeuronIteratorPtr itr = layerPtr->createReverseIterator();
380: 			itr->next();
381: 			itr->next();
382: 			itr->first();
383: 			int result = itr->currentItem()->getId();
384: 			return wrap(result);
385: 			
386:   Rf_warning("your C program does not return anything!");
387:   return R_NilValue;
388: }
Timing stopped at: 2.508 0.466 3.62 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138942dcbccdc.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942dcbccdc.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138942dcbccdc.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942dcbccdc.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942dcbccdc.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942dcbccdc.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138942dcbccdc.cpp 2> file138942dcbccdc.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerReverseIterator.Cpp.isDone  ... file138941ef69701.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941ef69701.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138941ef69701.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941ef69701.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138941ef69701.cpp: In function 'SEXPREC* file138941ef69701(SEXPREC*)':
file138941ef69701.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138941ef69701.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138941ef69701.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138941ef69701 ( SEXP Ids );
366: }
367: 
368: SEXP file138941ef69701 ( SEXP Ids ) {
369: 
370: 			// Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 			NeuronPtr neuronPtr;
374: 			Rcpp::IntegerVector ids(Ids);
375: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
376: 				neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
377: 				layerPtr->push_back(neuronPtr);
378: 			}
379: 			NeuronIteratorPtr itr = layerPtr->createReverseIterator();
380: 			itr->first();
381: 			std::vector<bool> result;
382: 			result.push_back( itr->isDone() );
383: 			itr->next();
384: 			result.push_back( itr->isDone() );
385: 			itr->next();
386: 			result.push_back( itr->isDone() );
387: 			itr->next();
388: 			result.push_back( itr->isDone() );
389: 			return wrap(result);
390: 			
391:   Rf_warning("your C program does not return anything!");
392:   return R_NilValue;
393: }
Timing stopped at: 2.528 0.471 3.867 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138941ef69701.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941ef69701.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138941ef69701.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138941ef69701.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138941ef69701.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138941ef69701.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138941ef69701.cpp 2> file138941ef69701.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.ContainerReverseIterator.Cpp.next  ... file138944f33d288.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944f33d288.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138944f33d288.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944f33d288.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138944f33d288.cpp: In function 'SEXPREC* file138944f33d288(SEXPREC*)':
file138944f33d288.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138944f33d288.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138944f33d288.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138944f33d288 ( SEXP Ids );
366: }
367: 
368: SEXP file138944f33d288 ( SEXP Ids ) {
369: 
370: 			// Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			LayerPtr layerPtr ( neuralFactoryPtr->makeLayer() );
373: 			NeuronPtr neuronPtr;
374: 			Rcpp::IntegerVector ids(Ids);
375: 			for (Rcpp::IntegerVector::iterator idItr = ids.begin() ; idItr!=ids.end();  ++idItr){  
376: 			neuronPtr = neuralFactoryPtr->makeNeuron(*idItr) ;
377: 			layerPtr->push_back(neuronPtr);
378: 			}
379: 			NeuronIteratorPtr itr = layerPtr->createReverseIterator();
380: 			itr->first();
381: 			std::vector<Handler> result;
382: 			result.push_back( itr->currentItem()->getId() );
383: 			itr->next();
384: 			result.push_back( itr->currentItem()->getId() );
385: 			itr->next();
386: 			result.push_back( itr->currentItem()->getId() );
387: 			return wrap(result);
388: 			
389:   Rf_warning("your C program does not return anything!");
390:   return R_NilValue;
391: }
Timing stopped at: 2.463 0.452 4.095 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138944f33d288.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944f33d288.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138944f33d288.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944f33d288.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944f33d288.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944f33d288.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138944f33d288.cpp 2> file138944f33d288.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.MLPfactory.Cpp.makeCon  ... file1389453430757.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389453430757.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389453430757.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389453430757.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389453430757.cpp: In function 'SEXPREC* file1389453430757()':
file1389453430757.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389453430757.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389453430757.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389453430757 (  );
366: }
367: 
368: SEXP file1389453430757 (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(1) );
372: 			ConPtr conPtr( neuralFactoryPtr->makeCon(*neuronPtr, 4.5) ); 
373: 			conPtr->show();
374: 			conPtr->validate();	
375: 			return	Rcpp::List::create(	Rcpp::Named("Id") 	= conPtr->Id(),
376: 			Rcpp::Named("weight") = conPtr->getWeight()
377: 			);
378: 			
379:   Rf_warning("your C program does not return anything!");
380:   return R_NilValue;
381: }
Timing stopped at: 2.441 0.445 3.357 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389453430757.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389453430757.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389453430757.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389453430757.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389453430757.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389453430757.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389453430757.cpp 2> file1389453430757.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.MLPfactory.Cpp.makeMLPbehavior  ... file1389455970b75.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389455970b75.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389455970b75.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389455970b75.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp: In function 'SEXPREC* file1389455970b75()':
file1389455970b75.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:373: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:374: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:382: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:387: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:388: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:389: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:390: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389455970b75.cpp:391: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389455970b75.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389455970b75 (  );
366: }
367: 
368: SEXP file1389455970b75 (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory );			
371: 			LayerPtr inputLayerPtr (neuralFactoryPtr->makeLayer());
372: 			NeuronPtr neuronPtrInput1( neuralFactoryPtr->makeNeuron(1) );
373: 			NeuronPtr neuronPtrInput2( neuralFactoryPtr->makeNeuron(2) );
374: 			NeuronPtr neuronPtrInput3( neuralFactoryPtr->makeNeuron(3) );
375: 			inputLayerPtr->push_back(neuronPtrInput1);
376: 			inputLayerPtr->push_back(neuronPtrInput2);	
377: 			inputLayerPtr->push_back(neuronPtrInput3);
378: 			neuronPtrInput1->setOutput(4.0);
379: 			neuronPtrInput2->setOutput(2.0);
380: 			neuronPtrInput3->setOutput(4.0);
381: 			
382: 			LayerPtr outputLayerPtr (neuralFactoryPtr->makeLayer());
383: 		
384: 			Rcpp::XPtr<CppFunctionPointer>  f0XPtr(new CppFunctionPointer(&Tanh_f0)) ;
385: 			Rcpp::XPtr<CppFunctionPointer>  f1XPtr(new CppFunctionPointer(&Tanh_f1)) ;
386: 
387: 			NeuronPtr neuronPtrOutput4( neuralFactoryPtr->makeNeuron(4) );
388: 			neuronPtrOutput4->addCon(neuralFactoryPtr->makeCon(*neuronPtrInput1, 0.25));	// These are hand-made in order to check the sim results
389: 			neuronPtrOutput4->addCon(neuralFactoryPtr->makeCon(*neuronPtrInput2, 0.50));
390: 			neuronPtrOutput4->addCon(neuralFactoryPtr->makeCon(*neuronPtrInput3, 0.75));
391: 			ActivationFunctionPtr activationFunctionPtr ( neuralFactoryPtr->makeActivationFunction(neuronPtrOutput4, f0XPtr, f1XPtr)	);
392: 			neuronPtrOutput4->setActivationFunction(activationFunctionPtr);
393: 
394: 			neuronPtrOutput4->singlePatternForwardAction();
395: 
396: 			outputLayerPtr->push_back(neuronPtrOutput4);
397: 
398: 			Rprintf("===================================");
399: 			Rprintf(" Input Neurons ");
400: 			Rprintf("===================================");			
401: 			inputLayerPtr->show();
402: 
403: 			Rprintf("===================================");
404: 			Rprintf(" Output Neurons ");
405: 			Rprintf("===================================");	
406: 			outputLayerPtr->show();
407: 
408: 			return	Rcpp::List::create(	Rcpp::Named("outputN1") = neuronPtrInput1->getOutput(),
409: 										Rcpp::Named("outputN2") = neuronPtrInput2->getOutput(),
410: 										Rcpp::Named("outputN3") = neuronPtrInput3->getOutput(),
411: 										Rcpp::Named("outputN4") = neuronPtrOutput4->getOutput()
412: 			);
413: 			
414:   Rf_warning("your C program does not return anything!");
415:   return R_NilValue;
416: }
Timing stopped at: 2.522 0.469 3.782 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389455970b75.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389455970b75.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389455970b75.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389455970b75.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389455970b75.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389455970b75.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389455970b75.cpp 2> file1389455970b75.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.MLPfactory.Cpp.makeNeuron  ... file138942f715a39.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942f715a39.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138942f715a39.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942f715a39.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138942f715a39.cpp: In function 'SEXPREC* file138942f715a39()':
file138942f715a39.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138942f715a39.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138942f715a39 (  );
366: }
367: 
368: SEXP file138942f715a39 (  ) {
369: 
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(1) );
372: 			neuronPtr->show();
373: 			neuronPtr->validate();	
374: 			return	Rcpp::List::create(	Rcpp::Named("Id") 	= neuronPtr->getId()
375: 			);
376: 			
377:   Rf_warning("your C program does not return anything!");
378:   return R_NilValue;
379: }
Timing stopped at: 2.538 0.477 4.103 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138942f715a39.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942f715a39.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138942f715a39.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138942f715a39.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138942f715a39.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138942f715a39.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138942f715a39.cpp 2> file138942f715a39.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.NetworkRinterface.Cpp.createCustomFeedForwardNetwork  ... file138943ada6c84.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ada6c84.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943ada6c84.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ada6c84.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943ada6c84.cpp: In function 'SEXPREC* file138943ada6c84(SEXPREC*, SEXPREC*, SEXPREC*)':
file138943ada6c84.cpp:375: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943ada6c84.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138943ada6c84.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138943ada6c84 ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction );
366: }
367: 
368: SEXP file138943ada6c84 ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction ) {
369: 
370: 			// Data set up			
371: 			NetworkRinterface networkRinterface;
372: 	    	NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
373: 	
374: 			// Test
375: 			Rcpp::List hiddenLayersActivationFunctionList = neuralFactoryPtr->makeXPtrFunctionList("Tanh");
376: 			Rcpp::List outputLayerActivationFunctionsList = neuralFactoryPtr->makeXPtrFunctionList("Identity");
377: 
378: 			
379: 			networkRinterface.createCustomFeedForwardNetwork(numberOfNeurons, hiddenLayersActivationFunctionList, outputLayerActivationFunctionsList);
380: 			return wrap( networkRinterface.validate() );
381: 			
382:   Rf_warning("your C program does not return anything!");
383:   return R_NilValue;
384: }
Timing stopped at: 2.727 0.494 7.271 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138943ada6c84.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ada6c84.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943ada6c84.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ada6c84.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ada6c84.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ada6c84.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138943ada6c84.cpp 2> file138943ada6c84.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.NetworkRinterface.Cpp.createFeedForwardNetwork  ... file138945a0a6c4b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945a0a6c4b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138945a0a6c4b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945a0a6c4b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138945a0a6c4b.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138945a0a6c4b ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction );
366: }
367: 
368: SEXP file138945a0a6c4b ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction ) {
369: 
370: 		// Data set up			
371: 			NetworkRinterface networkRinterface;
372: 		// Test
373: 			networkRinterface.createFeedForwardNetwork(numberOfNeurons, hiddenLayerFunction, outputLayerFunction);
374: 			return wrap( networkRinterface.validate() );
375: 			
376:   Rf_warning("your C program does not return anything!");
377:   return R_NilValue;
378: }
Timing stopped at: 2.747 0.488 5.711 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138945a0a6c4b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945a0a6c4b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138945a0a6c4b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945a0a6c4b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945a0a6c4b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945a0a6c4b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138945a0a6c4b.cpp 2> file138945a0a6c4b.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.NetworkRinterface.Cpp.inputSize  ... file13894624bde1b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894624bde1b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894624bde1b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894624bde1b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894624bde1b.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894624bde1b ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction );
366: }
367: 
368: SEXP file13894624bde1b ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction ) {
369: 
370: 			// Data set up			
371: 			NetworkRinterface networkRinterface;
372: 			// Test
373: 			networkRinterface.createFeedForwardNetwork(numberOfNeurons, hiddenLayerFunction, outputLayerFunction);
374: 			return wrap(  networkRinterface.inputSize()  );
375: 			
376:   Rf_warning("your C program does not return anything!");
377:   return R_NilValue;
378: }
Timing stopped at: 2.78 0.519 5.86 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894624bde1b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894624bde1b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894624bde1b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894624bde1b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894624bde1b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894624bde1b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894624bde1b.cpp 2> file13894624bde1b.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.NetworkRinterface.Cpp.outputSize  ... file1389462e2f107.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389462e2f107.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389462e2f107.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389462e2f107.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389462e2f107.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389462e2f107 ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction );
366: }
367: 
368: SEXP file1389462e2f107 ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction ) {
369: 
370: 			// Data set up			
371: 			NetworkRinterface networkRinterface;
372: 			// Test
373: 			networkRinterface.createFeedForwardNetwork(numberOfNeurons, hiddenLayerFunction, outputLayerFunction);
374: 			return wrap( networkRinterface.outputSize() );
375: 			
376:   Rf_warning("your C program does not return anything!");
377:   return R_NilValue;
378: }
Timing stopped at: 2.743 0.498 5.363 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389462e2f107.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389462e2f107.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389462e2f107.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389462e2f107.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389462e2f107.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389462e2f107.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389462e2f107.cpp 2> file1389462e2f107.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.NetworkRinterface.Cpp.show_InitializedNetwork  ... file13894213e3549.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894213e3549.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894213e3549.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894213e3549.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file13894213e3549.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file13894213e3549 ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction );
366: }
367: 
368: SEXP file13894213e3549 ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction ) {
369: 
370: 			// Data set up			
371: 			NetworkRinterface networkRinterface;
372: 			// Test
373: 			networkRinterface.createFeedForwardNetwork(numberOfNeurons, hiddenLayerFunction, outputLayerFunction);
374: 			networkRinterface.show();
375: 			return wrap(true);
376: 			
377:   Rf_warning("your C program does not return anything!");
378:   return R_NilValue;
379: }
Timing stopped at: 2.746 0.497 5.132 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file13894213e3549.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894213e3549.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file13894213e3549.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file13894213e3549.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file13894213e3549.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file13894213e3549.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file13894213e3549.cpp 2> file13894213e3549.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.NetworkRinterface.Cpp.show_UninitializedNetwork  ... file138947b1c5cab.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947b1c5cab.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138947b1c5cab.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947b1c5cab.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138947b1c5cab.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138947b1c5cab (  );
366: }
367: 
368: SEXP file138947b1c5cab (  ) {
369: 
370: 			// Data set up			
371: 			NetworkRinterface networkRinterface;
372: 			// Test
373: 			networkRinterface.show();
374: 			networkRinterface.validate();
375: 			return wrap(true);
376: 			
377:   Rf_warning("your C program does not return anything!");
378:   return R_NilValue;
379: }
Timing stopped at: 2.781 0.526 5.858 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138947b1c5cab.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947b1c5cab.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138947b1c5cab.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947b1c5cab.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947b1c5cab.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947b1c5cab.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138947b1c5cab.cpp 2> file138947b1c5cab.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.NetworkRinterface.Cpp.sim  ... file138943081db2.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943081db2.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943081db2.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943081db2.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138943081db2.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138943081db2 ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction, SEXP input );
366: }
367: 
368: SEXP file138943081db2 ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction, SEXP input ) {
369: 
370: 		// Data set up			
371: 			NetworkRinterface networkRinterface;
372: 		// Test
373: 			networkRinterface.createFeedForwardNetwork(numberOfNeurons, hiddenLayerFunction, outputLayerFunction);
374: 			Rcpp::NumericMatrix inputMatrix (input); 
375: 			return wrap( networkRinterface.sim(inputMatrix) );
376: 		
377:   Rf_warning("your C program does not return anything!");
378:   return R_NilValue;
379: }
Timing stopped at: 2.824 0.539 8.155 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138943081db2.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943081db2.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943081db2.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943081db2.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943081db2.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943081db2.cpp:321:Adem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138943081db2.cpp 2> file138943081db2.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.NetworkRinterface.Cpp.train.ADAPTgd.LMS  ... file138949d592ac.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138949d592ac.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138949d592ac.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138949d592ac.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138949d592ac.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138949d592ac ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction, SEXP algorithm, SEXP learningRate, SEXP costFunction, SEXP numberOfEpochs, SEXP showStep, SEXP input, SEXP target );
366: }
367: 
368: SEXP file138949d592ac ( SEXP numberOfNeurons, SEXP hiddenLayerFunction, SEXP outputLayerFunction, SEXP algorithm, SEXP learningRate, SEXP costFunction, SEXP numberOfEpochs, SEXP showStep, SEXP input, SEXP target ) {
369: 
370: 			// Data set up			
371: 			NetworkRinterface networkRinterface;
372: 			networkRinterface.createFeedForwardNetwork(numberOfNeurons, hiddenLayerFunction, outputLayerFunction);
373: 			// Test
374: 			Rcpp::List parameterList;
375: 			parameterList["inputMatrix"]       = Rcpp::NumericMatrix    (input); 
376: 			parameterList["targetMatrix"]      = Rcpp::NumericMatrix    (target);
377: 			parameterList["algorithm"]         = Rcpp::CharacterVector  (algorithm);
378: 			parameterList["learningRate"]      = Rcpp::NumericVector    (learningRate);
379: 			parameterList["costFunction"]      = Rcpp::CharacterVector  (costFunction);
380: 			parameterList["numberOfEpochs"]    = Rcpp::IntegerVector    (numberOfEpochs);
381: 			parameterList["showStep"]          = Rcpp::IntegerVector    (showStep); 
382: 			
383:             networkRinterface.train(parameterList);
384: 			return wrap( networkRinterface.sim( Rcpp::NumericMatrix(input) ) );
385: 			
386:   Rf_warning("your C program does not return anything!");
387:   return R_NilValue;
388: }
Timing stopped at: 2.819 0.523 7.465 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138949d592ac.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138949d592ac.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138949d592ac.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138949d592ac.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138949d592ac.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138949d592ac.cpp:321:Adem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138949d592ac.cpp 2> file138949d592ac.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Neuron.Cpp.Validate_EmptyCon  ... file1389424905f3f.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389424905f3f.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389424905f3f.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389424905f3f.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389424905f3f.cpp: In function 'SEXPREC* file1389424905f3f()':
file1389424905f3f.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389424905f3f.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389424905f3f (  );
366: }
367: 
368: SEXP file1389424905f3f (  ) {
369: 
370: 			//Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(12) );
373: 			neuronPtr->validate();			// An empty con does not throw exception
374: 			return wrap( neuronPtr->getId() );			
375: 			
376:   Rf_warning("your C program does not return anything!");
377:   return R_NilValue;
378: }
Timing stopped at: 2.854 0.526 6.014 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389424905f3f.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389424905f3f.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389424905f3f.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389424905f3f.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389424905f3f.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389424905f3f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389424905f3f.cpp 2> file1389424905f3f.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Neuron.Cpp.Validate_IdIsNa  ... file1389425d33da.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389425d33da.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389425d33da.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389425d33da.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389425d33da.cpp: In function 'SEXPREC* file1389425d33da()':
file1389425d33da.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389425d33da.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389425d33da (  );
366: }
367: 
368: SEXP file1389425d33da (  ) {
369: 
370: 			//Test
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(NA_INTEGER) );
373: 			neuronPtr->validate();			
374: 			
375:   Rf_warning("your C program does not return anything!");
376:   return R_NilValue;
377: }
Timing stopped at: 2.784 0.497 4.782 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389425d33da.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389425d33da.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389425d33da.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389425d33da.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389425d33da.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389425d33da.cpp:321:Adem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389425d33da.cpp 2> file1389425d33da.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Neuron.Cpp.getId  ... file1389434f72e6c.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389434f72e6c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389434f72e6c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389434f72e6c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389434f72e6c.cpp: In function 'SEXPREC* file1389434f72e6c()':
file1389434f72e6c.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389434f72e6c.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389434f72e6c.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389434f72e6c (  );
366: }
367: 
368: SEXP file1389434f72e6c (  ) {
369: 
370: 		// Data set up
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(NA_INTEGER) );
373: 		// Test
374: 			std::vector<Handler> result;
375: 			result.push_back( neuronPtr->getId() ) ;
376: 			neuronPtr = neuralFactoryPtr->makeNeuron(12) ;	
377: 			result.push_back( neuronPtr->getId() ) ;			
378: 			return wrap(result);
379: 			
380:   Rf_warning("your C program does not return anything!");
381:   return R_NilValue;
382: }
Timing stopped at: 2.836 0.504 5.486 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389434f72e6c.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389434f72e6c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389434f72e6c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389434f72e6c.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389434f72e6c.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389434f72e6c.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389434f72e6c.cpp 2> file1389434f72e6c.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.Neuron.Cpp.setId  ... file138945008cf9e.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945008cf9e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138945008cf9e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945008cf9e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138945008cf9e.cpp: In function 'SEXPREC* file138945008cf9e()':
file138945008cf9e.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138945008cf9e.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138945008cf9e (  );
366: }
367: 
368: SEXP file138945008cf9e (  ) {
369: 
370: 			// Data set up
371: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
372: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(NA_INTEGER) );
373: 		// Test
374: 			std::vector<Handler> result;
375: 			result.push_back( neuronPtr->getId() ) ;
376: 			neuronPtr->setId(12);
377: 			result.push_back( neuronPtr->getId() ) ;			
378: 			neuronPtr->setId(NA_INTEGER);
379: 			result.push_back( neuronPtr->getId() ) ;			
380: 			neuronPtr->setId(35);
381: 			result.push_back( neuronPtr->getId() ) ;			
382: 
383: 			return wrap(result);
384: 			
385:   Rf_warning("your C program does not return anything!");
386:   return R_NilValue;
387: }
Timing stopped at: 2.808 0.508 5.473 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138945008cf9e.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945008cf9e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138945008cf9e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945008cf9e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945008cf9e.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945008cf9e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138945008cf9e.cpp 2> file138945008cf9e.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.RcppModules.Cpp.new_NetworRinterface  ... file138947276b71e.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947276b71e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138947276b71e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947276b71e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138947276b71e.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138947276b71e (  );
366: }
367: 
368: SEXP file138947276b71e (  ) {
369: 
370:   Rf_warning("your C program does not return anything!");
371:   return R_NilValue;
372: }
Timing stopped at: 2.787 0.509 5.229 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138947276b71e.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947276b71e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138947276b71e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947276b71e.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947276b71e.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947276b71e.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138947276b71e.cpp 2> file138947276b71e.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.inputSize  ... file138944ff04d47.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944ff04d47.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138944ff04d47.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944ff04d47.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138944ff04d47.cpp: In function 'SEXPREC* file138944ff04d47(SEXPREC*)':
file138944ff04d47.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138944ff04d47.cpp:374: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138944ff04d47.cpp:375: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138944ff04d47.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138944ff04d47 ( SEXP numberOfNeurons );
366: }
367: 
368: SEXP file138944ff04d47 ( SEXP numberOfNeurons ) {
369: 
370: 			// Data set up			
371: 			NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory );
372: 			NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 
374: 			Rcpp::List hiddenLayersActivationFunctionList = neuralFactoryPtr->makeXPtrFunctionList("Tanh");
375: 			Rcpp::List outputLayerActivationFunctionsList = neuralFactoryPtr->makeXPtrFunctionList("Identity");
376: 
377: 			NeuralNetworkPtr networkPtr = neuralCreatorPtr->createCustomFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), hiddenLayersActivationFunctionList, outputLayerActivationFunctionsList);
378:             networkPtr->show();
379: 
380: 			// Test
381: 			int result ( networkPtr->inputSize() );
382: 			return wrap(result);
383: 			
384:   Rf_warning("your C program does not return anything!");
385:   return R_NilValue;
386: }
Timing stopped at: 2.794 0.495 5.832 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138944ff04d47.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944ff04d47.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138944ff04d47.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944ff04d47.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944ff04d47.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944ff04d47.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138944ff04d47.cpp 2> file138944ff04d47.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.outputSize  ... file1389429619951.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389429619951.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389429619951.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389429619951.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389429619951.cpp: In function 'SEXPREC* file1389429619951(SEXPREC*)':
file1389429619951.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389429619951.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389429619951 ( SEXP numberOfNeurons );
366: }
367: 
368: SEXP file1389429619951 ( SEXP numberOfNeurons ) {
369: 
370: 			// Data set up			
371: 			NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory );
372: 			NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 
374: 			NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
375: 			networkPtr->show();
376: 			// Test
377: 			int result ( networkPtr->outputSize() );
378: 			return wrap(result);
379: 			
380:   Rf_warning("your C program does not return anything!");
381:   return R_NilValue;
382: }
Timing stopped at: 2.794 0.501 5.004 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389429619951.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389429619951.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389429619951.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389429619951.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389429619951.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389429619951.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389429619951.cpp 2> file1389429619951.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.readOutput  ... file138944698aa10.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944698aa10.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138944698aa10.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944698aa10.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138944698aa10.cpp: In function 'SEXPREC* file138944698aa10(SEXPREC*, SEXPREC*)':
file138944698aa10.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138944698aa10.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138944698aa10 ( SEXP numberOfNeurons, SEXP inputData );
366: }
367: 
368: SEXP file138944698aa10 ( SEXP numberOfNeurons, SEXP inputData ) {
369: 
370: 			// Data set up		
371: 			NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory );
372: 			NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 			
374: 			NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
375: 			networkPtr->show();
376: 			// Test
377: 			Rcpp::NumericVector inputVector(inputData);
378: 			Rcpp::NumericVector outputVector(networkPtr->outputSize());
379: 	
380:      		std::vector<double>::iterator inputIterator(inputVector.begin()) ;
381: 			std::vector<double>::iterator outputIterator(outputVector.begin()) ;
382: 
383: 			networkPtr->writeInput(inputIterator);
384: 			networkPtr->readOutput(outputIterator);
385: 			return wrap(outputVector);
386: 			
387:   Rf_warning("your C program does not return anything!");
388:   return R_NilValue;
389: }
Timing stopped at: 2.819 0.503 4.898 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138944698aa10.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944698aa10.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138944698aa10.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138944698aa10.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138944698aa10.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138944698aa10.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138944698aa10.cpp 2> file138944698aa10.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.setNetworkTrainBehavior  ... file1389450c524a5.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389450c524a5.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389450c524a5.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389450c524a5.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389450c524a5.cpp: In function 'SEXPREC* file1389450c524a5(SEXPREC*, SEXPREC*, SEXPREC*)':
file1389450c524a5.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389450c524a5.cpp:378: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389450c524a5.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389450c524a5 ( SEXP numberOfNeurons, SEXP inputData, SEXP targetData );
366: }
367: 
368: SEXP file1389450c524a5 ( SEXP numberOfNeurons, SEXP inputData, SEXP targetData ) {
369: 
370: 				// Data set up		
371: 		            NeuralFactoryPtr neuralFactoryPtr ( new MLPNoNetworkTrainBehaviorFactory );
372: 	                NeuralCreatorPtr neuralCreatorPtr ( neuralFactoryPtr->makeNeuralCreator() );
373: 					NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
374: 				// Test
375: 					Rcpp::List result;
376: 					result["before"]= networkPtr->getNetworkTrainBehaviorName();
377: 					neuralFactoryPtr = NeuralFactoryPtr(new ADAPTgdFactory) ;
378: 					NetworkTrainBehaviorPtr networkTrainBehaviorPtr ( neuralFactoryPtr->makeNetworkTrainBehavior(networkPtr) );
379: 					networkPtr->setNetworkTrainBehavior( networkTrainBehaviorPtr );
380: 					result["after"]= networkPtr->getNetworkTrainBehaviorName();
381: 					return result;
382: 		
383:   Rf_warning("your C program does not return anything!");
384:   return R_NilValue;
385: }
Timing stopped at: 2.793 0.51 5.014 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389450c524a5.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389450c524a5.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389450c524a5.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389450c524a5.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389450c524a5.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389450c524a5.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389450c524a5.cpp 2> file1389450c524a5.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.setNeuronTrainBehavior  ... file138943ee8f610.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ee8f610.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943ee8f610.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ee8f610.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943ee8f610.cpp: In function 'SEXPREC* file138943ee8f610(SEXPREC*, SEXPREC*, SEXPREC*)':
file138943ee8f610.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943ee8f610.cpp:377: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138943ee8f610.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138943ee8f610 ( SEXP numberOfNeurons, SEXP inputData, SEXP targetData );
366: }
367: 
368: SEXP file138943ee8f610 ( SEXP numberOfNeurons, SEXP inputData, SEXP targetData ) {
369: 
370: 				// Data set up		
371: 				NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory );
372: 				NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 				NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
374: 				networkPtr->show();
375: 				// Test
376: 				neuralFactoryPtr = NeuralFactoryPtr(new ADAPTgdFactory) ;
377: 				NetworkTrainBehaviorPtr networkTrainBehaviorPtr ( neuralFactoryPtr->makeNetworkTrainBehavior(networkPtr) );
378: 				networkPtr->setNetworkTrainBehavior( networkTrainBehaviorPtr );
379: 				networkPtr->show();
380: 				networkPtr->setNeuronTrainBehavior( *neuralFactoryPtr );
381: 				networkPtr->show();
382: 				return wrap(true);
383: 				
384:   Rf_warning("your C program does not return anything!");
385:   return R_NilValue;
386: }
Timing stopped at: 2.69 0.489 4.517 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138943ee8f610.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ee8f610.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943ee8f610.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ee8f610.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ee8f610.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ee8f610.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138943ee8f610.cpp 2> file138943ee8f610.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.singlePatternBackwardAction  ... file138943072b4b4.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943072b4b4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943072b4b4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943072b4b4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943072b4b4.cpp: In function 'SEXPREC* file138943072b4b4(SEXPREC*, SEXPREC*, SEXPREC*)':
file138943072b4b4.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943072b4b4.cpp:376: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138943072b4b4.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138943072b4b4 ( SEXP numberOfNeurons, SEXP inputData, SEXP targetData );
366: }
367: 
368: SEXP file138943072b4b4 ( SEXP numberOfNeurons, SEXP inputData, SEXP targetData ) {
369: 
370: 		// Data set up		
371: 				NeuralFactoryPtr neuralFactoryPtr (new ADAPTgdFactory );
372: 				NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 				NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
374: 
375: 				neuralFactoryPtr = NeuralFactoryPtr(new ADAPTgdFactory) ;
376: 				NetworkTrainBehaviorPtr networkTrainBehaviorPtr ( neuralFactoryPtr->makeNetworkTrainBehavior(networkPtr) );
377: 				networkPtr->setNetworkTrainBehavior( networkTrainBehaviorPtr );
378: 				networkPtr->setNeuronTrainBehavior( *neuralFactoryPtr );
379: 		// Test
380: 			Rcpp::NumericVector inputVector(inputData);
381: 			Rcpp::NumericVector outputVector(networkPtr->outputSize());
382: 			Rcpp::NumericVector targetVector(targetData);
383: 			
384: 			std::vector<double>::iterator inputIterator(inputVector.begin());
385: 			std::vector<double>::iterator targetIterator(targetVector.begin());
386: 			std::vector<double>::iterator outputIterator(outputVector.begin());
387: 			
388: 			networkPtr->writeInput(inputIterator);
389: 			Rprintf("====================================================================================================================");
390: 			Rprintf("Write input: ");
391: 			Rprintf("====================================================================================================================");
392: 			networkPtr->show();
393: 			networkPtr->singlePatternForwardAction();
394: 			Rprintf("====================================================================================================================");
395: 			Rprintf("Forward: ");
396: 			Rprintf("====================================================================================================================");
397: 			networkPtr->show();
398: 			networkPtr->singlePatternBackwardAction();
399: 			Rprintf("====================================================================================================================");
400: 			Rprintf("Backward: ");
401: 			Rprintf("====================================================================================================================");
402: 			networkPtr->show();	
403: 			networkPtr->readOutput(outputIterator);
404: 			return wrap(outputVector);
405: 			
406:   Rf_warning("your C program does not return anything!");
407:   return R_NilValue;
408: }
Timing stopped at: 2.69 0.489 4.636 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138943072b4b4.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943072b4b4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943072b4b4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943072b4b4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943072b4b4.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943072b4b4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138943072b4b4.cpp 2> file138943072b4b4.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.singlePatternForwardAction  ... file138943ab5ae45.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ab5ae45.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943ab5ae45.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ab5ae45.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138943ab5ae45.cpp: In function 'SEXPREC* file138943ab5ae45(SEXPREC*, SEXPREC*)':
file138943ab5ae45.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138943ab5ae45.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138943ab5ae45 ( SEXP numberOfNeurons, SEXP inputData );
366: }
367: 
368: SEXP file138943ab5ae45 ( SEXP numberOfNeurons, SEXP inputData ) {
369: 
370: 			// Data set up		
371: 			NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory );
372: 			NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 			NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
374: 			networkPtr->show();
375: 			// Test
376: 			Rcpp::NumericVector inputVector(inputData);
377: 			Rcpp::NumericVector outputVector(networkPtr->outputSize());
378: 			
379: 			std::vector<double>::iterator inputIterator(inputVector.begin());
380: 			std::vector<double>::iterator outputIterator(outputVector.begin());
381: 			
382: 			networkPtr->writeInput(inputIterator);
383: 			networkPtr->singlePatternForwardAction();
384: 			networkPtr->readOutput(outputIterator);
385: 			return wrap(outputVector);
386: 			
387:   Rf_warning("your C program does not return anything!");
388:   return R_NilValue;
389: }
Timing stopped at: 2.723 0.488 4.801 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138943ab5ae45.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ab5ae45.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138943ab5ae45.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138943ab5ae45.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138943ab5ae45.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138943ab5ae45.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138943ab5ae45.cpp 2> file138943ab5ae45.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.validate  ... file138946dc4521f.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946dc4521f.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138946dc4521f.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946dc4521f.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138946dc4521f.cpp: In function 'SEXPREC* file138946dc4521f(SEXPREC*)':
file138946dc4521f.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138946dc4521f.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138946dc4521f ( SEXP numberOfNeurons );
366: }
367: 
368: SEXP file138946dc4521f ( SEXP numberOfNeurons ) {
369: 
370: 			// Data set up			
371: 			NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory()     );
372: 			NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 			NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
374: 			// Test
375: 			bool result ( networkPtr->validate() );
376: 			return wrap(result);
377: 			
378:   Rf_warning("your C program does not return anything!");
379:   return R_NilValue;
380: }
Timing stopped at: 2.7 0.498 5.297 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138946dc4521f.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946dc4521f.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138946dc4521f.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138946dc4521f.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138946dc4521f.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138946dc4521f.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138946dc4521f.cpp 2> file138946dc4521f.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.writeInput  ... file1389473eba985.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389473eba985.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389473eba985.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389473eba985.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389473eba985.cpp: In function 'SEXPREC* file1389473eba985(SEXPREC*, SEXPREC*)':
file1389473eba985.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389473eba985.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389473eba985 ( SEXP numberOfNeurons, SEXP inputData );
366: }
367: 
368: SEXP file1389473eba985 ( SEXP numberOfNeurons, SEXP inputData ) {
369: 
370: 			// Data set up		
371: 			NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory );
372: 			NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 			NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
374: 			networkPtr->show();
375: 			// Test
376: 			Rcpp::NumericVector inputVector(inputData);
377: 			Rcpp::NumericVector outputVector(2 * networkPtr->outputSize());
378: 
379: 			std::vector<double>::iterator inputIterator(inputVector.begin());
380: 			std::vector<double>::iterator outputIterator(outputVector.begin());
381: 			
382: 			networkPtr->singlePatternForwardAction();
383: 			networkPtr->readOutput(outputIterator);	
384: 			networkPtr->writeInput(inputIterator);
385: 			networkPtr->singlePatternForwardAction();
386: 			networkPtr->readOutput(outputIterator);
387: 			return wrap(outputVector);
388: 			
389:   Rf_warning("your C program does not return anything!");
390:   return R_NilValue;
391: }
Timing stopped at: 2.646 0.486 4.704 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389473eba985.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389473eba985.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389473eba985.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389473eba985.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389473eba985.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389473eba985.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389473eba985.cpp 2> file1389473eba985.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNetwork.Cpp.writeTarget  ... file1389474c69637.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389474c69637.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389474c69637.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389474c69637.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389474c69637.cpp: In function 'SEXPREC* file1389474c69637(SEXPREC*, SEXPREC*)':
file1389474c69637.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389474c69637.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389474c69637 ( SEXP numberOfNeurons, SEXP targetData );
366: }
367: 
368: SEXP file1389474c69637 ( SEXP numberOfNeurons, SEXP targetData ) {
369: 
370: 			// Data set up		
371: 			NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory );
372: 			NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 			NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
374: 			networkPtr->show();
375: 			// Test
376: 			Rcpp::NumericVector targetVector(targetData);
377: 			Rcpp::NumericVector resultVector(2 * networkPtr->outputSize());
378: 			
379: 			std::vector<double>::iterator targetIterator(targetVector.begin());
380: 			std::vector<double>::iterator resultIterator(resultVector.begin());
381: 			
382: 			networkPtr->writeTarget(targetIterator);
383: 			return wrap(true);
384: 			
385:   Rf_warning("your C program does not return anything!");
386:   return R_NilValue;
387: }
Timing stopped at: 2.775 0.499 5.306 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389474c69637.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389474c69637.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389474c69637.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389474c69637.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389474c69637.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389474c69637.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389474c69637.cpp 2> file1389474c69637.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNeuronCreator.Cpp.createCustomFeedForward  ... file1389419b030c6.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389419b030c6.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389419b030c6.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389419b030c6.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389419b030c6.cpp: In function 'SEXPREC* file1389419b030c6(SEXPREC*)':
file1389419b030c6.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389419b030c6.cpp:374: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389419b030c6.cpp:375: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389419b030c6.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389419b030c6 ( SEXP numberOfNeurons );
366: }
367: 
368: SEXP file1389419b030c6 ( SEXP numberOfNeurons ) {
369: 
370: 			// Data set up			
371: 			NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory()     );
372: 			NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 
374: 			Rcpp::List hiddenLayersActivationFunctionList = neuralFactoryPtr->makeXPtrFunctionList("Tanh");
375: 			Rcpp::List outputLayerActivationFunctionsList = neuralFactoryPtr->makeXPtrFunctionList("Identity");
376: 
377: 			NeuralNetworkPtr networkPtr = neuralCreatorPtr->createCustomFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), hiddenLayersActivationFunctionList, outputLayerActivationFunctionsList);
378: 			
379: 			// Test
380: 			networkPtr->show();
381: 			networkPtr->validate();
382: 			return wrap(true);
383: 			
384:   Rf_warning("your C program does not return anything!");
385:   return R_NilValue;
386: }
Timing stopped at: 2.625 0.478 4.666 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389419b030c6.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389419b030c6.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389419b030c6.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389419b030c6.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389419b030c6.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389419b030c6.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389419b030c6.cpp 2> file1389419b030c6.cpp.err.txt' tiene estatus 1 
 done successfully.



Executing test function test.SimpleNeuronCreator.Cpp.createFeedForward  ... file138947e522456.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947e522456.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138947e522456.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947e522456.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138947e522456.cpp: In function 'SEXPREC* file138947e522456(SEXPREC*)':
file138947e522456.cpp:372: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138947e522456.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file138947e522456 ( SEXP numberOfNeurons );
366: }
367: 
368: SEXP file138947e522456 ( SEXP numberOfNeurons ) {
369: 
370: 			// Data set up			
371: 				NeuralFactoryPtr neuralFactoryPtr (new MLPNoNetworkTrainBehaviorFactory()     );
372: 				NeuralCreatorPtr neuralCreatorPtr( neuralFactoryPtr->makeNeuralCreator() );
373: 				NeuralNetworkPtr networkPtr = neuralCreatorPtr->createFeedForwardNetwork(*neuralFactoryPtr, as< std::vector<int> >(numberOfNeurons), "Tanh", "Identity");
374: 
375: 			// Test
376: 				networkPtr->show();
377: 				networkPtr->validate();
378: 				return wrap(true);
379: 			
380:   Rf_warning("your C program does not return anything!");
381:   return R_NilValue;
382: }
Timing stopped at: 2.647 0.498 5.103 
Error in compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file138947e522456.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947e522456.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138947e522456.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138947e522456.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138947e522456.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138947e522456.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file incluAdem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file138947e522456.cpp 2> file138947e522456.cpp.err.txt' tiene estatus 1 
 done successfully.

> 	
> 
> 	incCode <-	paste(readLines( "pkg/AMORE/src/AMORE.h"),	collapse = "\n" )
> 	testCode <- " 
+ 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
+ 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(1) );
+ 			
+ 			Con con( *neuronPtr , 4.5 );
+ 			con.show();
+ 			con.validate();	
+ 			return	Rcpp::List::create(	Rcpp::Named(\"Id\") 	= con.Id(),
+ 										Rcpp::Named(\"weight\") = con.getWeight()
+ 									);
+ 			"
> 	testCodefun <- cfunction(sig=signature(), body=testCode,includes=incCode, otherdefs="using namespace Rcpp;", language="C++", verbose=FALSE, convention=".Call",Rcpp=TRUE,cppargs=character(), cxxargs= paste("-I",getwd(),"/pkg/AMORE/src -I/opt/local/include",sep=""), libargs=character())
file1389442cfcae4.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389442cfcae4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389442cfcae4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389442cfcae4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442cfcae4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442cfcae4.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442cfcae4.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442cfcae4.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442cfcae4.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442cfcae4.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389442cfcae4.cpp: In function 'SEXPREC* file1389442cfcae4()':
file1389442cfcae4.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389442cfcae4.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389442cfcae4 (  );
366: }
367: 
368: SEXP file1389442cfcae4 (  ) {
369:  
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(1) );
372: 			
373: 			Con con( *neuronPtr , 4.5 );
374: 			con.show();
375: 			con.validate();	
376: 			return	Rcpp::List::create(	Rcpp::Named("Id") 	= con.Id(),
377: 										Rcpp::Named("weight") = con.getWeight()
378: 									);
379: 			
380:   Rf_warning("your C program does not return anything!");
381:   return R_NilValue;
382: }
Error en compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389442cfcae4.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389442cfcae4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389442cfcae4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389442cfcae4.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389442cfcae4.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389442cfcae4.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinte
Adem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389442cfcae4.cpp 2> file1389442cfcae4.cpp.err.txt' tiene estatus 1 
> 	result <- testCodefun()
Error: no se pudo encontrar la funci'on "testCodefun"
> 	checkEquals(result$Id, 1)
Error en all.equal(target, current, tolerance = tolerance, ...) : 
  objeto 'result' no encontrado
> 	checkEquals(result$weight, 4.5)
Error en all.equal(target, current, tolerance = tolerance, ...) : 
  objeto 'result' no encontrado
> 	

[INFO] Updating the R environment index started...

[INFO] The R environment index was updated successfully.
> 
> 	dir()
[1] "2012-11-14 01-29-50.Rtr" "diaClassDiagrams"       
[3] "pkg"                    
> 	dir("pkg/")
[1] "AMORE"
> 
> 	dir("pkg/AMORE")
[1] "2012-11-14 00-58-35.Rtr" "2012-11-14 01-04-38.Rtr"
[3] "2012-11-14 01-14-30.Rtr" "DESCRIPTION"            
[5] "NAMESPACE"               "R"                      
[7] "man"                     "src"                    
[9] "unitTest"               
> 	
> 	dir("pkg/AMORE/src")
 [1] "ADAPTgdFactory.cpp"                    
 [2] "ADAPTgdHiddenNeuronTrainBehavior.cpp"  
 [3] "ADAPTgdNetworkTrainBehavior.cpp"       
 [4] "ADAPTgdNeuronTrainBehavior.cpp"        
 [5] "ADAPTgdOutputNeuronTrainBehavior.cpp"  
 [6] "ADAPTgdwmFactory.cpp"                  
 [7] "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
 [8] "ADAPTgdwmNetworkTrainBehavior.cpp"     
 [9] "ADAPTgdwmNeuronTrainBehavior.cpp"      
[10] "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
[11] "AMORE.h"                               
[12] "ActivationFunction.cpp"                
[13] "AdaptNetworkTrainBehavior.cpp"         
[14] "AdaptNeuronTrainBehavior.cpp"          
[15] "BATCHgdFactory.cpp"                    
[16] "BATCHgdHiddenNeuronTrainBehavior.cpp"  
[17] "BATCHgdNetworkTrainBehavior.cpp"       
[18] "BATCHgdNeuronTrainBehavior.cpp"        
[19] "BATCHgdOutputNeuronTrainBehavior.cpp"  
[20] "BATCHgdwmFactory.cpp"                  
[21] "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
[22] "BATCHgdwmNetworkTrainBehavior.cpp"     
[23] "BATCHgdwmNeuronTrainBehavior.cpp"      
[24] "BATCHgdwmOutputNeuronTrainBehavior.cpp"
[25] "BatchNetworkTrainBehavior.cpp"         
[26] "BatchNeuronTrainBehavior.cpp"          
[27] "Connection.cpp"                        
[28] "Container.code"                        
[29] "Iterator.code"                         
[30] "LMLS.cpp"                              
[31] "LMS.cpp"                               
[32] "MLPNetworkTrainBehavior.cpp"           
[33] "MLPNeuronTrainBehavior.cpp"            
[34] "MLPNoNetworkTrainBehavior.cpp"         
[35] "MLPNoNetworkTrainBehaviorFactory.cpp"  
[36] "MLPbehavior.cpp"                       
[37] "MLPfactory.cpp"                        
[38] "Makevars"                              
[39] "Makevars.win"                          
[40] "NetworkRinterface.cpp"                 
[41] "NetworkTrainBehavior.cpp"              
[42] "NeuralNetwork.cpp"                     
[43] "Neuron.cpp"                            
[44] "NeuronTrainBehavior.cpp"               
[45] "NoNeuronTrainBehavior.cpp"             
[46] "PredictBehavior.cpp"                   
[47] "RcppModules.cpp"                       
[48] "SimpleContainer.code"                  
[49] "SimpleContainerIterator.code"          
[50] "SimpleContainerReverseIterator.code"   
[51] "SimpleNetwork.cpp"                     
[52] "SimpleNeuralCreator.cpp"               
[53] "SimpleNeuron.cpp"                      
[54] "TAO.cpp"                               
[55] "classHeaders"                          
[56] "package.h"                             
> 	testCodefun <- cfunction(sig=signature(), body=testCode,includes=incCode, otherdefs="using namespace Rcpp;", language="C++", verbose=FALSE, convention=".Call",Rcpp=TRUE,cppargs=character(), cxxargs= paste("-I",getwd(),"/pkg/AMORE/src -I/opt/local/include",sep=""), libargs=character())
file1389458116100.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389458116100.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389458116100.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389458116100.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389458116100.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389458116100.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389458116100.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389458116100.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389458116100.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389458116100.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
file1389458116100.cpp: In function 'SEXPREC* file1389458116100()':
file1389458116100.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file1389458116100.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNetworkWeakPtr;
177: typedef boost::weak_ptr<Neuron> NeuronWeakPtr;
178: 
179: 
180: //============================================================================================
181: // HEADERS (grouped according to the *.dia files)
182: //============================================================================================
183: 
184: // -------------------------------------------  Activation.dia class headers ----------
185: #include "classHeaders/ActivationFunction.h"
186: 
187: 
188: // -------------------------------------------  Con.dia class headers ----------
189: #include "classHeaders/Connection.h"
190: 
191: 
192: // -------------------------------------------  Container.dia class headers ----------
193: #include "classHeaders/Container.h"
194: #include "classHeaders/SimpleContainer.h"
195: #include "classHeaders/Iterator.h"
196: #include "classHeaders/SimpleContainerIterator.h"
197: #include "classHeaders/SimpleContainerReverseIterator.h"
198: 
199: 
200: // -------------------------------------------  CostFunction.dia class headers ----------
201: #include "classHeaders/CostFunction.h"
202: #include "classHeaders/LMS.h"
203: #include "classHeaders/LMLS.h"
204: #include "classHeaders/TAO.h"
205: 
206: // -------------------------------------------  NetworkRinterface.dia class headers ----------
207: #include "classHeaders/NetworkRinterface.h"
208: 
209: 
210: // -------------------------------------------  NetworkTrainBehavior.dia class headers ----------
211: #include "classHeaders/NetworkTrainBehavior.h"
212: #include "classHeaders/MLPNetworkTrainBehavior.h"
213: #include "classHeaders/MLPNoNetworkTrainBehavior.h"
214: #include "classHeaders/AdaptNetworkTrainBehavior.h"
215: #include "classHeaders/ADAPTgdNetworkTrainBehavior.h"
216: #include "classHeaders/ADAPTgdwmNetworkTrainBehavior.h"
217: #include "classHeaders/BatchNetworkTrainBehavior.h"
218: #include "classHeaders/BATCHgdNetworkTrainBehavior.h"
219: #include "classHeaders/BATCHgdwmNetworkTrainBehavior.h"
220: 
221: 
222: // -------------------------------------------  NeuralCreator.dia class headers ----------
223: #include "classHeaders/NeuralCreator.h"
224: #include "classHeaders/SimpleNeuralCreator.h"
225: 
226: 
227: // -------------------------------------------  NeuralNetwork.dia class headers ----------
228: #include "classHeaders/NeuralNetwork.h"
229: #include "classHeaders/SimpleNetwork.h"
230: 
231: 
232: // -------------------------------------------  Neuralfactory.dia class headers ----------
233: #include "classHeaders/NeuralFactory.h"
234: #include "classHeaders/MLPfactory.h"
235: #include "classHeaders/MLPNoNetworkTrainBehaviorFactory.h"
236: #include "classHeaders/ADAPTFactory.h"
237: #include "classHeaders/ADAPTgdFactory.h"
238: #include "classHeaders/ADAPTgdwmFactory.h"
239: #include "classHeaders/BATCHFactory.h"
240: #include "classHeaders/BATCHgdFactory.h"
241: #include "classHeaders/BATCHgdwmFactory.h"
242: 
243: 
244: // -------------------------------------------  Neuron.dia class headers ----------
245: #include "classHeaders/Neuron.h"
246: #include "classHeaders/SimpleNeuron.h"
247: 
248: 
249: // -------------------------------------------  NeuronTrainBehavior.dia class headers ----------
250: #include "classHeaders/NeuronTrainBehavior.h"
251: #include "classHeaders/NoNeuronTrainBehavior.h"
252: #include "classHeaders/MLPNeuronTrainBehavior.h"
253: #include "classHeaders/AdaptNeuronTrainBehavior.h"
254: #include "classHeaders/ADAPTgdNeuronTrainBehavior.h"
255: #include "classHeaders/ADAPTgdOutputNeuronTrainBehavior.h"
256: #include "classHeaders/ADAPTgdHiddenNeuronTrainBehavior.h"
257: #include "classHeaders/ADAPTgdwmNeuronTrainBehavior.h"
258: #include "classHeaders/ADAPTgdwmOutputNeuronTrainBehavior.h"
259: #include "classHeaders/ADAPTgdwmHiddenNeuronTrainBehavior.h"
260: #include "classHeaders/BatchNeuronTrainBehavior.h"
261: #include "classHeaders/BATCHgdNeuronTrainBehavior.h"
262: #include "classHeaders/BATCHgdOutputNeuronTrainBehavior.h"
263: #include "classHeaders/BATCHgdHiddenNeuronTrainBehavior.h"
264: #include "classHeaders/BATCHgdwmNeuronTrainBehavior.h"
265: #include "classHeaders/BATCHgdwmOutputNeuronTrainBehavior.h"
266: #include "classHeaders/BATCHgdwmHiddenNeuronTrainBehavior.h"
267: 
268: 
269: // -------------------------------------------  PredictBehavior.dia class headers ----------
270: #include "classHeaders/PredictBehavior.h"
271: #include "classHeaders/MLPBehavior.h"
272: 
273: 
274: //============================================================================================
275: // CODE  (grouped according to the *.dia files)
276: //============================================================================================
277: 
278: // -------------------------------------------  Activation.dia classes' code ----------
279: #include "ActivationFunction.cpp"
280: 
281: 
282: // -------------------------------------------  Con.dia classes' code ----------
283: #include "Connection.cpp"
284: 
285: 
286: // -------------------------------------------  Container.dia classes' code ----------
287: // Container.dia classes are templates, thus with coded defined in the header files
288: 
289: 
290: // -------------------------------------------  CostFunction.dia classes' code ----------
291: #include "LMS.cpp"
292: #include "LMLS.cpp"
293: #include "TAO.cpp"
294: 
295: // -------------------------------------------  NetworkRinterface.dia classes' code ----------
296: #include "NetworkRinterface.cpp"
297: 
298: 
299: // -------------------------------------------  NetworkTrainBehavior.dia classes' code ----------
300: #include "NetworkTrainBehavior.cpp"
301: #include "MLPNetworkTrainBehavior.cpp"
302: #include "MLPNoNetworkTrainBehavior.cpp"
303: #include "AdaptNetworkTrainBehavior.cpp"
304: #include "ADAPTgdNetworkTrainBehavior.cpp"
305: #include "ADAPTgdwmNetworkTrainBehavior.cpp"
306: #include "BatchNetworkTrainBehavior.cpp"
307: #include "BATCHgdNetworkTrainBehavior.cpp"
308: #include "BATCHgdwmNetworkTrainBehavior.cpp"
309: 
310: 
311: // -------------------------------------------  NeuralCreator.dia classes' code ----------
312: #include "SimpleNeuralCreator.cpp"
313: 
314: 
315: // -------------------------------------------  NeuralNetwork.dia classes' code ----------
316: #include "NeuralNetwork.cpp"
317: #include "SimpleNetwork.cpp"
318: 
319: 
320: // -------------------------------------------  Neuralfactory.dia classes' code ----------
321: #include "MLPfactory.cpp"
322: #include "MLPNoNetworkTrainBehaviorFactory.cpp"
323: #include "ADAPTgdFactory.cpp"
324: #include "ADAPTgdwmFactory.cpp"
325: #include "BATCHgdFactory.cpp"
326: #include "BATCHgdwmFactory.cpp"
327: 
328: 
329: // -------------------------------------------  Neuron.dia class classes' code ----------
330: #include "Neuron.cpp"
331: #include "SimpleNeuron.cpp"
332: 
333: 
334: // -------------------------------------------  NeuronTrainBehavior.dia classes' code ----------
335: #include "NeuronTrainBehavior.cpp"
336: #include "NoNeuronTrainBehavior.cpp"
337: #include "MLPNeuronTrainBehavior.cpp"
338: #include "AdaptNeuronTrainBehavior.cpp"
339: #include "ADAPTgdNeuronTrainBehavior.cpp"
340: #include "ADAPTgdOutputNeuronTrainBehavior.cpp"
341: #include "ADAPTgdHiddenNeuronTrainBehavior.cpp"
342: #include "ADAPTgdwmNeuronTrainBehavior.cpp"
343: #include "ADAPTgdwmOutputNeuronTrainBehavior.cpp"
344: #include "ADAPTgdwmHiddenNeuronTrainBehavior.cpp"
345: #include "BatchNeuronTrainBehavior.cpp"
346: #include "BATCHgdNeuronTrainBehavior.cpp"
347: #include "BATCHgdOutputNeuronTrainBehavior.cpp"
348: #include "BATCHgdHiddenNeuronTrainBehavior.cpp"
349: #include "BATCHgdwmNeuronTrainBehavior.cpp"
350: #include "BATCHgdwmOutputNeuronTrainBehavior.cpp"
351: #include "BATCHgdwmHiddenNeuronTrainBehavior.cpp"
352: 
353: 
354: // -------------------------------------------  PredictBehavior.dia classes' code ----------
355: #include "PredictBehavior.cpp"
356: #include "MLPbehavior.cpp"
357: 
358: 
359: // -------------------------------------------  RcppModules code ----------
360: #include "RcppModules.cpp"
361: 
362: 
363: using namespace Rcpp;
364: extern "C" {
365:   SEXP file1389458116100 (  );
366: }
367: 
368: SEXP file1389458116100 (  ) {
369:  
370: 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
371: 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(1) );
372: 			
373: 			Con con( *neuronPtr , 4.5 );
374: 			con.show();
375: 			con.validate();	
376: 			return	Rcpp::List::create(	Rcpp::Named("Id") 	= con.Id(),
377: 										Rcpp::Named("weight") = con.getWeight()
378: 									);
379: 			
380:   Rf_warning("your C program does not return anything!");
381:   return R_NilValue;
382: }
Error en compileCode(f, code, language, verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file1389458116100.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389458116100.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file1389458116100.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file1389458116100.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file1389458116100.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file1389458116100.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinte
Adem'as: Mensajes de aviso perdidos
comando ejecutado '/Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB file1389458116100.cpp 2> file1389458116100.cpp.err.txt' tiene estatus 1 
> 
> 
> 	incCode <-	paste(readLines( "pkg/AMORE/src/AMORE.h"),	collapse = "\n" )
> 	testCode <- " 
+ 			NeuralFactoryPtr neuralFactoryPtr( new MLPNoNetworkTrainBehaviorFactory() );
+ 			NeuronPtr neuronPtr( neuralFactoryPtr->makeNeuron(1) );
+ 			
+ 			Con con( *neuronPtr , 4.5 );
+ 			con.show();
+ 			con.validate();	
+ 			return	Rcpp::List::create(	Rcpp::Named(\"Id\") 	= con.Id(),
+ 										Rcpp::Named(\"weight\") = con.getWeight()
+ 									);
+ 			"
> 	testCodefun <- cfunction(sig=signature(), body=testCode,includes=incCode, otherdefs="using namespace Rcpp;", language="C++", verbose=FALSE, convention=".Call",Rcpp=TRUE,cppargs=character(), cxxargs= paste("-I",getwd(),"/pkg/AMORE/src -I/opt/local/include",sep=""), libargs=character())
file138945cf7742b.cpp:233:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945cf7742b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:2:27: error: NeuralFactory.h: No such file or directory
In file included from file138945cf7742b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:11:40: error: classHeaders/NeuralFactory.h: No such file or directory
In file included from file138945cf7742b.cpp:234:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/MLPfactory.h:5: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945cf7742b.cpp:296:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createFeedForwardNetwork(Rcpp::NumericVector, Rcpp::CharacterVector, Rcpp::CharacterVector)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:30: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'void NetworkRinterface::createCustomFeedForwardNetwork(Rcpp::NumericVector, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:41: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp: In member function 'Rcpp::List NetworkRinterface::train(Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:102: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945cf7742b.cpp:312:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, std::string, std::string)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:28: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:29: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp: In member function 'virtual NeuralNetworkPtr SimpleNeuralCreator::createCustomFeedForwardNetwork(NeuralFactory&, std::vector<int, std::allocator<int> >, Rcpp::List, Rcpp::List)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:40: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:73: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:75: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:85: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:91: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:92: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:103: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:109: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:110: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:122: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:128: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNeuralCreator.cpp:129: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945cf7742b.cpp:316:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp: In constructor 'NeuralNetwork::NeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:14: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:16: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NeuralNetwork.cpp:17: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945cf7742b.cpp:317:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp: In member function 'virtual void SimpleNetwork::setNeuronTrainBehavior(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:87: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/SimpleNetwork.cpp:99: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945cf7742b.cpp:321:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuronPtr MLPfactory::makeNeuron(Handler)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:51: error: no matching function for call to 'SimpleNeuron::SimpleNeuron(MLPfactory&)'
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:8: note: candidates are: SimpleNeuron::SimpleNeuron(NeuralFactory&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/classHeaders/SimpleNeuron.h:5: note:                 SimpleNeuron::SimpleNeuron(const SimpleNeuron&)
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp: In member function 'NeuralNetworkPtr MLPfactory::makeNeuralNetwork(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/MLPfactory.cpp:107: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
In file included from file138945cf7742b.cpp:330:
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp: In constructor 'Neuron::Neuron(NeuralFactory&)':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/Neuron.cpp:15: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
file138945cf7742b.cpp: In function 'SEXPREC* file138945cf7742b()':
file138945cf7742b.cpp:371: error: invalid use of incomplete type 'struct NeuralFactory'
file138945cf7742b.cpp:69: error: forward declaration of 'struct NeuralFactory'
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = MLPNoNetworkTrainBehaviorFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:29:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'MLPNoNetworkTrainBehaviorFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:80:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = ADAPTgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:84:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'ADAPTgdwmFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:88:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdFactory*' to 'NeuralFactory*' in initialization
/opt/local/include/boost/smart_ptr/shared_ptr.hpp: In constructor 'boost::shared_ptr<T>::shared_ptr(Y*) [with Y = BATCHgdwmFactory, T = NeuralFactory]':
/Users/mcasl/Documents/workspace/amore/pkg/Cpp/pkg/AMORE/src/NetworkRinterface.cpp:92:   instantiated from here
/opt/local/include/boost/smart_ptr/shared_ptr.hpp:183: error: cannot convert 'BATCHgdwmFactory*' to 'NeuralFactory*' in initialization
make: *** [file138945cf7742b.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: #include <Rcpp.h>
  2: 
  3: //
  4: // This file is used by the unit tests,
  5: // not by R CMD INSTALL AMORE
  6: //
  7: //
  8: 
  9: 
 10: /*! \mainpage The AMORE++ package
 11: 
 12:  *
 13: 
 14:  * \section intro_sec Introduction
 15: 
 16:  *
 17: 
 18:  * Here you will find the documentation of the C++ component of the AMORE++ R package.
 19: 
 20:  * The AMORE++ package is a new version of the publicly available AMORE package for neural network training and simulation under R
 21: 
 22:  *
 23: 
 24:  * \section motiv_sec Motivation
 25: 
 26:  *
 27: 
 28:  * Since the release of the previous version of the AMORE many things have changed in the R programming world.
 29: 
 30:  * The advent of the Reference Classes and of packages like Rcpp, inline and RUnit compel us to write a better version of the package in order to provide a more useful framework for neural network training and simulation.
 31: 
 32:  *
 33: 
 34:  * \section RoadMap Road Map
 35: 
 36:  * This project is currently very active and the development team intends to provide a beta version as soon as this summer (2011)
 37: 
 38:  *
 39: 
 40:  */
 41: 
 42: #include <iostream>
 43: #include <sstream>
 44: #include <algorithm>
 45: #include <vector>
 46: #include <iterator>
 47: #include <string>
 48: #include <boost/shared_ptr.hpp>
 49: #include <boost/weak_ptr.hpp>
 50: #include <boost/ref.hpp> // remove once the Con class does not use boost::ref
 51: #include <valarray>      // for tanh, ...
 52: #include <Rcpp.h>
 53: 
 54: using namespace Rcpp;
 55: 
 56: class ActivationFunction;
 57: class Con;
 58: template<typename T> class Container;
 59: class CostFunction;
 60: class classNoTrainBehaviorFactory;
 61: 
 62: class Identity;
 63: template<typename T> class Iterator;
 64: class MLPbehavior;
 65: class MLPfactory;
 66: class NetworkRinterface;
 67: class NeuralNetwork;
 68: class NeuralCreator;
 69: class NeuralFactory;
 70: class NetworkTrainBehavior;
 71: class Neuron;
 72: class NeuronTrainBehavior;
 73: 
 74: class PredictBehavior;
 75: template<typename T> class SimpleContainer;
 76: template<typename T> class SimpleContainerIterator;
 77: template<typename T> class SimpleContainerReverseIterator;
 78: class SimpleNetwork;
 79: class SimpleNeuralCreator;
 80: class SimpleNeuron;
 81: class Tanh;
 82: 
 83: 
 84: 
 85: class TrainingBehavior;
 86: 
 87: 
 88: #ifndef size_type
 89: #define size_type unsigned int
 90: #endif
 91: 
 92: typedef int Handler;
 93: typedef double (*CppFunctionPointer)(double);
 94: 
 95: 
 96: //============================================================================================
 97: // ----------------------------------- Function definitions ----------------------
 98: //============================================================================================
 99: double default_f0(double inducedLocalField)  { return NA_REAL; }
100: double default_f1(double inducedLocalField)  { return NA_REAL; }
101: 
102: double Tanh_f0(double inducedLocalField)     { return tanh(inducedLocalField); }
103: double Tanh_f1(double inducedLocalField)     { double f0value = tanh(inducedLocalField); return 1-f0value*f0value;}
104: 
105: double Identity_f0(double inducedLocalField) { return inducedLocalField; }
106: double Identity_f1(double inducedLocalField) { return 1; }
107: 
108: double Threshold_f0(double inducedLocalField)   { return (inducedLocalField > 0) ? 1 : 0 ; }
109: double Threshold_f1(double inducedLocalField)   { return 0; }
110: 
111: double Logistic_f0(double inducedLocalField) { return 1.0/(1.0+exp(-inducedLocalField)) ; }
112: double Logistic_f1(double inducedLocalField) { double f0value = 1.0/(1.0+exp(-inducedLocalField)); return f0value*(1-f0value) ; }
113: 
114: double Exponential_f0(double inducedLocalField) { return exp(inducedLocalField); }
115: double Exponential_f1(double inducedLocalField) { double f0value=exp(inducedLocalField); return f0value; }
116: 
117: double Reciprocal_f0(double inducedLocalField) { return 1.0/inducedLocalField; }
118: double Reciprocal_f1(double inducedLocalField) { double f0value=1.0/inducedLocalField ; return -f0value*f0value; }
119: 
120: double Square_f0(double inducedLocalField) { return inducedLocalField*inducedLocalField; }
121: double Square_f1(double inducedLocalField) { return 2*inducedLocalField; }
122: 
123: double Gauss_f0(double inducedLocalField) { return exp(-inducedLocalField*inducedLocalField); }
124: double Gauss_f1(double inducedLocalField) { double f0value=exp(-inducedLocalField*inducedLocalField); return -2*inducedLocalField*f0value; }
125: 
126: double Sine_f0(double inducedLocalField) { return sin(inducedLocalField); }
127: double Sine_f1(double inducedLocalField) { return cos(inducedLocalField); }
128: 
129: double Cosine_f0(double inducedLocalField) { return cos(inducedLocalField); }
130: double Cosine_f1(double inducedLocalField) { return -sin(inducedLocalField); }
131: 
132: 
133: double Elliot_f0(double inducedLocalField) { return inducedLocalField/(1+abs(inducedLocalField)); }
134: double Elliot_f1(double inducedLocalField) { double aux= abs(inducedLocalField)+1; return (aux+inducedLocalField) / (aux*aux) ; }
135: 
136: double Arctan_f0(double inducedLocalField) { return 2.0*atan(inducedLocalField)/M_PI; }
137: double Arctan_f1(double inducedLocalField) { return 2.0/((1+inducedLocalField*inducedLocalField)*M_PI); }
138: 
139: 
140: //============================================================================================
141: // ----------------------------------- End of Function definitions ----------------------
142: //============================================================================================
143: 
144: 
145: 
146: 
147: // typedef boost::reference_wrapper<PredictBehavior> ActivationFunctionRef;
148: // typedef boost::reference_wrapper<PredictBehavior> PredictBehaviorRef;
149: // typedef boost::reference_wrapper<TrainingBehavior> TrainingBehaviorRef;
150: 
151: typedef boost::reference_wrapper<Neuron> NeuronRef;
152: 
153: 
154: typedef boost::shared_ptr<ActivationFunction> ActivationFunctionPtr;
155: typedef boost::shared_ptr<CostFunction> CostFunctionPtr;
156: typedef boost::shared_ptr<PredictBehavior> PredictBehaviorPtr;
157: typedef boost::shared_ptr<NetworkTrainBehavior> NetworkTrainBehaviorPtr;
158: typedef boost::shared_ptr<NeuronTrainBehavior> NeuronTrainBehaviorPtr;
159: typedef boost::shared_ptr<Neuron> NeuronPtr;
160: typedef boost::shared_ptr<Con> ConPtr;
161: typedef boost::shared_ptr<NeuralNetwork> NeuralNetworkPtr;
162: 
163: typedef boost::shared_ptr< Container<NeuronPtr > > LayerPtr;
164: typedef boost::shared_ptr< Container< LayerPtr > > LayerContainerPtr;
165: typedef boost::shared_ptr< Container<ConPtr> > ConContainerPtr;
166: 
167: 
168: typedef boost::shared_ptr< Iterator<LayerPtr> > LayerIteratorPtr;
169: typedef boost::shared_ptr< Iterator<NeuronPtr> > NeuronIteratorPtr;
170: typedef boost::shared_ptr< Iterator<ConPtr> > ConIteratorPtr;
171: 
172: typedef boost::shared_ptr< NeuralFactory > NeuralFactoryPtr;
173: typedef boost::shared_ptr< NeuralCreator > NeuralCreatorPtr;
174: 
175: typedef boost::weak_ptr<CostFunction> CostFunctionWeakPtr;
176: typedef boost::weak_ptr<NeuralNetwork> NeuralNet